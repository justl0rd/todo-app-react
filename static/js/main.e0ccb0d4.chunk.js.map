{"version":3,"sources":["components/Header.js","components/NewToDo.js","components/ToDoItem.js","components/ToDoList.js","components/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","NewToDo","state","currentTask","text","taskHandler","_ref","target","tasksLength","_this","props","setState","status","value","id","concat","Date","now","keyPressHandler","e","addTask","key","preventDefault","this","type","onClick","markHandler","name","placeholder","onKeyPress","onChange","Component","ToDoItem","editing","edtingTaskText","editingHandler","_this$props","updateEditedTasks","taskId","handleClickOutside","classList","contains","closeEdit","_ref2","showDefaultTask","_this$props2","task","statusHandler","removeTask","taskClassName","onDoubleClick","showEditingTask","_ref3","document","removeEventListener","addEventListener","React","ToDoList","tasks","showMode","tasksToShow","filter","toLowerCase","map","idx","ToDoItem_ToDoItem","sortButtons","Footer","modeHandler","items","removeTasks","isAreAnyCompleted","itemsInfo","button","buttonName","App","push","newTasks","localStorageHandler","_this$state","localStorage","setItem","JSON","stringify","some","forEach","activeTasks","newText","getActiveItems","length","parse","getItem","prevProps","prevState","_this$state2","activeItems","activeItemsCount","components_Header","NewToDo_NewToDo","components_ToDoList","components_Footer","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.e0ccb0d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header-head\">todos</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nexport default class NewToDo extends Component {\r\n    state = {\r\n        currentTask: {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    taskHandler = ({target}) => {\r\n        const {tasksLength} = this.props;\r\n\r\n        this.setState({\r\n            currentTask: {\r\n                status: 'active',\r\n                text: target.value,\r\n                id: `${tasksLength}${Date.now()}`\r\n            }\r\n        })\r\n    }\r\n\r\n    keyPressHandler = e => {\r\n        const {addTask} = this.props,\r\n            {currentTask} = this.state,\r\n            {key} = e;  \r\n\r\n        if (key === 'Enter') {\r\n            e.preventDefault();\r\n            addTask(currentTask);\r\n            this.setState({\r\n                currentTask: {\r\n                    status: 'active',\r\n                    text: ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {text} = this.state.currentTask,\r\n            {tasksLength} = this.props;\r\n\r\n        return (\r\n            <div className=\"new-todo\">\r\n                <form>\r\n                    {!!tasksLength &&\r\n                    <label className=\"new-todo__label new-todo__label_button\">\r\n                        <input\r\n                            className=\"new-todo__item new-todo__item_button\"\r\n                            type=\"button\"\r\n                            value=\"\"\r\n                            onClick={this.props.markHandler}\r\n                        />\r\n                    </label>\r\n                    }\r\n                    <label className={`new-todo__label ${!tasksLength && 'empty-list'}`}>\r\n                        <input \r\n                            className=\"new-todo__item new-todo__item_input\"\r\n                            type=\"text\"\r\n                            name=\"todo\"\r\n                            placeholder=\"What needs to be done?\"\r\n                            onKeyPress={this.keyPressHandler}\r\n                            onChange={this.taskHandler}\r\n                            value={text}\r\n                        />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\n\r\nexport default class ToDoItem extends React.Component {\r\n\r\n    state = {\r\n        editing: false,\r\n        edtingTaskText: ''\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleClickOutside);\r\n        this.setState({\r\n            edtingTaskText: this.props.task.text\r\n        });\r\n    }\r\n\r\n    editingHandler = () => {\r\n        const {editing} = this.state;\r\n\r\n        this.setState({ editing: !editing })\r\n        if (editing) {     \r\n            const {updateEditedTasks, taskId} = this.props,\r\n                {edtingTaskText} = this.state;\r\n            \r\n            updateEditedTasks(edtingTaskText, taskId);\r\n        }\r\n    };\r\n\r\n    handleClickOutside = ({target}) => {\r\n        if (this.state.editing && !target.classList.contains('todo-item__editing')) {\r\n            this.editingHandler();\r\n        }\r\n    }\r\n\r\n    closeEdit = ({key}) => (key === 'Enter') && this.editingHandler();\r\n\r\n    showDefaultTask = () => {\r\n        const {task, taskId, statusHandler, removeTask} = this.props,\r\n            {status, text} = task,\r\n            taskClassName = (status === 'active') ? 'todo-list__task-text' : 'todo-list__task-text todo-list__task-text--completed';\r\n\r\n        return (\r\n            <div className=\"todo-list__content\">\r\n                <input \r\n                    type=\"checkbox\"\r\n                    className=\"todo-list__checkbox\"\r\n                    onClick={() => statusHandler(taskId)}\r\n                />\r\n                <label className={taskClassName}>\r\n                    <span onDoubleClick={this.editingHandler}>{text}</span>\r\n                </label>\r\n                <button \r\n                    className=\"remove\"\r\n                    onClick={() => removeTask(taskId)}\r\n                >×</button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    showEditingTask = () => {\r\n        return (\r\n            <label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"todo-item__editing\"\r\n                    onChange={({target}) => this.setState({ edtingTaskText: target.value })}\r\n                    onKeyPress={this.closeEdit}\r\n                    value={this.state.edtingTaskText}\r\n                />\r\n            </label>\r\n        );\r\n    };\r\n    \r\n    render() {\r\n        const {editing} = this.state;\r\n\r\n        return(\r\n            <li className=\"todo-list__item\">\r\n                {!editing ? this.showDefaultTask() : this.showEditingTask()}\r\n            </li>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport ToDoItem from './ToDoItem';\r\n\r\nconst ToDoList = props => {\r\n    const { tasks, removeTask, statusHandler, showMode, updateEditedTasks } = props,\r\n        tasksToShow = showMode === 'all' ? tasks : tasks.filter(task => task.status.toLowerCase() === showMode);\r\n\r\n    return(\r\n        <ul className=\"todo-list\">\r\n            {tasksToShow.map((task, idx) => (\r\n\r\n                <ToDoItem \r\n                    task={task} \r\n                    key={`${idx}${task.text}`}\r\n                    taskId={task.id}\r\n                    removeTask={removeTask}\r\n                    statusHandler={statusHandler}\r\n                    updateEditedTasks={updateEditedTasks}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nconst sortButtons = ['All', 'Active', 'Completed'];\r\n\r\nconst Footer = ({\r\n                modeHandler,\r\n                showMode,\r\n                items,\r\n                removeTasks,\r\n                isAreAnyCompleted\r\n            }) => {\r\n\r\n    const getClassName = buttonName => (\r\n        (buttonName.toLowerCase() === showMode)\r\n                    ? \r\n                    'todo__filter-item selected'\r\n                    : \r\n                    'todo__filter-item'\r\n    );\r\n\r\n    const itemsInfo = ((items === 1) && `${items} item left`) || `${items} items left`;\r\n    \r\n    \r\n    return(\r\n        <footer className=\"footer\">\r\n            <span className=\"todo__count\">{itemsInfo}</span>\r\n            <ul className=\"todo__filters\">\r\n                {sortButtons.map((button, key) => (\r\n                    <li \r\n                        key={`${button}${key}`}\r\n                        className={getClassName(button)}\r\n                        onClick={() => modeHandler(button.toLowerCase())}\r\n                    >\r\n                        {button}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {isAreAnyCompleted &&\r\n                <span className=\"clear-button\" onClick={removeTasks}>Clear completed</span>\r\n            }\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport NewToDo from './components/NewToDo';\nimport ToDoList from './components/ToDoList';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  \n  state = {\n    tasks: [],\n    showMode: 'all'\n  }\n\n  componentDidMount() {\n    const tasks = JSON.parse(localStorage.getItem('tasks')),\n    showMode = localStorage.getItem('showMode');\n    if (tasks) {\n      this.setState({ tasks, showMode });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.localStorageHandler();\n    }\n  }\n\n  addTask = task => {\n    const {tasks} = this.state;\n    tasks.push(task);\n    \n    this.setState({ tasks });\n  };\n\n  removeTask = taskId => {\n    const {tasks} = this.state,\n      newTasks = tasks.filter(task => task.id !== taskId);\n    \n    \n    this.setState({\n      tasks: newTasks\n    });\n  };\n\n  statusHandler = taskId => {\n    const {tasks} = this.state,\n      newTasks = tasks.map(task => {\n\n      if (taskId === task.id) {\n        (task.status === 'completed') ? task.status = 'active': task.status = 'completed';\n      }\n\n      return task;\n    });\n\n    this.setState({\n      tasks: newTasks\n    });\n  };\n\n  modeHandler = showMode => this.setState({ showMode });\n\n  localStorageHandler = () => {\n    const {tasks, showMode} = this.state;\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    localStorage.setItem('showMode', showMode);\n  };\n\n  markHandler = () => {\n    const {tasks} = this.state,\n      isActive = tasks.some(task => task.status === 'active');\n\n    if (isActive) {\n      tasks.forEach(task => ((task.status = 'completed'), task));\n    }\n    else {\n      tasks.forEach(task => ((task.status = 'active'), task));\n    }\n\n    this.setState({tasks});\n  }\n\n  removeTasks = () => {\n    const {tasks} = this.state,\n      activeTasks = tasks.filter(task => task.status !== 'completed');\n\n    this.setState({\n      tasks: activeTasks\n    });\n  }\n\n  updateEditedTasks = (newText, id) => {\n    const {tasks} = this.state;\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.text = newText;\n      }\n    });\n\n    this.setState( {tasks} );\n  }\n\n  getActiveItems = () => {\n    const {tasks} = this.state;\n    if (tasks.length) {\n      return tasks.filter(task => task.status === 'active');\n    }\n    return [];\n  };\n\n  render() {\n    const {tasks, showMode} = this.state,\n      activeItems = this.getActiveItems(),\n      activeItemsCount = (activeItems && activeItems.length) || 0,\n      isAreAnyCompleted =(tasks && tasks.some(task => task.status === 'completed')) || false,\n      tasksLength = (tasks && tasks.length) || 0;\n      \n    return (\n      <section className=\"todo-app\">\n        <Header />\n        <section className=\"main\">\n          <NewToDo\n            addTask={this.addTask}\n            tasksLength={tasksLength}\n            markHandler={this.markHandler}\n          />\n          {tasks &&\n          <ToDoList\n            tasks={tasks}\n            removeTask={this.removeTask}\n            statusHandler={this.statusHandler}\n            showMode={showMode}\n            updateEditedTasks={this.updateEditedTasks}\n          />\n          }\n        </section>\n        {(!!activeItemsCount || !!tasksLength) && \n        <Footer \n          modeHandler={this.modeHandler}\n          showMode={showMode}\n          items={activeItemsCount}\n          removeTasks={this.removeTasks}\n          isAreAnyCompleted={isAreAnyCompleted}\n        />\n        }\n      </section>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}