{"version":3,"sources":["components/Header.js","components/NewToDo.js","components/ToDoItem.js","components/ToDoList.js","components/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","NewToDo","state","currentTask","text","taskHandler","_ref","target","tasksLength","_this","props","setState","status","value","id","keyPressHandler","e","addTask","key","console","log","preventDefault","this","items","type","onKeyPress","concat","name","placeholder","onChange","Component","ToDoItem","task","removeTask","taskId","statusHandler","taskClassName","onClick","ToDoList","tasks","showMode","tasksToShow","filter","toLowerCase","map","idx","components_ToDoItem","sortButtons","Footer","modeHandler","itemsInfo","button","buttonName","App","push","newTasks","localStorageHandler","_this$state","localStorage","setItem","JSON","stringify","parse","getItem","prevProps","prevState","_this$state2","length","components_Header","NewToDo_NewToDo","components_ToDoList","components_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a6c62a5a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header-head\">todos</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nexport default class NewToDo extends Component {\r\n    state = {\r\n        currentTask: {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    taskHandler = ({target}) => {\r\n        const {tasksLength} = this.props;\r\n\r\n        this.setState({\r\n            currentTask: {\r\n                status: 'active',\r\n                text: target.value,\r\n                id: tasksLength\r\n            }\r\n        })\r\n    }\r\n\r\n    keyPressHandler = e => {\r\n        const {addTask} = this.props,\r\n            {currentTask} = this.state,\r\n            {key} = e;\r\n\r\n        console.log(this.state);\r\n        \r\n\r\n        if (key === 'Enter') {\r\n            e.preventDefault();\r\n            addTask(currentTask);\r\n            this.setState({\r\n                currentTask: {\r\n                    status: 'active',\r\n                    text: ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {text} = this.state.currentTask,\r\n            {items} = this.props;\r\n\r\n        return (\r\n            <div className=\"new-todo\">\r\n                <form>\r\n                    {!!items &&\r\n                    <label className=\"new-todo__label new-todo__label_button\">\r\n                        <input\r\n                            className=\"new-todo__item new-todo__item_button\"\r\n                            type=\"button\"\r\n                            value=\"\"\r\n                            onKeyPress={e => e.preventDefault()}\r\n                        />\r\n                    </label>\r\n                    }\r\n                    <label className={`new-todo__label ${!items && 'empty-list'}`}>\r\n                        <input \r\n                            className=\"new-todo__item new-todo__item_input\"\r\n                            type=\"text\"\r\n                            name=\"todo\"\r\n                            placeholder=\"What needs to be done?\"\r\n                            onKeyPress={this.keyPressHandler}\r\n                            onChange={this.taskHandler}\r\n                            value={text}\r\n                        />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\n\r\nconst ToDoItem = ({\r\n                task,\r\n                removeTask,\r\n                taskId,\r\n                statusHandler\r\n            }) => {\r\n\r\n    const {status, text} = task,\r\n        taskClassName = (status === 'active') ? 'todo-list__task-text' : 'todo-list__task-text todo-list__task-text--completed';\r\n    \r\n    return(\r\n    <li className=\"todo-list__item\">\r\n        <div className=\"todo-list__content\">\r\n            <input \r\n                type=\"checkbox\"\r\n                className=\"todo-list__checkbox\"\r\n                onClick={() => statusHandler(taskId)}\r\n            />\r\n            <label className={taskClassName}>{text}</label>\r\n            <button \r\n                className=\"remove\"\r\n                onClick={() => removeTask(taskId)}\r\n            >Ã—</button>\r\n        </div>\r\n    </li>\r\n    )\r\n};\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport ToDoItem from './ToDoItem';\r\n\r\nconst ToDoList = props => {\r\n    const {tasks, removeTask, statusHandler, showMode} = props,\r\n        tasksToShow = showMode === 'all' ? tasks : tasks.filter(task => task.status.toLowerCase() === showMode);\r\n\r\n    return(\r\n        <ul className=\"todo-list\">\r\n            {tasksToShow.map((task, idx) => (\r\n\r\n                <ToDoItem \r\n                    task={task} \r\n                    key={`${idx}${task}`}\r\n                    taskId={task.id}\r\n                    removeTask={removeTask}\r\n                    statusHandler={statusHandler}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nconst sortButtons = ['All', 'Active', 'Completed'];\r\n\r\nconst Footer = ({\r\n                modeHandler,\r\n                showMode,\r\n                items\r\n            }) => {\r\n\r\n    const getClassName = buttonName => (\r\n        (buttonName.toLowerCase() === showMode)\r\n                    ? \r\n                    'todo__filter-item selected'\r\n                    : \r\n                    'todo__filter-item'\r\n    );\r\n\r\n    const itemsInfo = ((items === 1) && `${items} item left`) || `${items} items left`;\r\n\r\n    \r\n    return(\r\n        <footer className=\"footer\">\r\n            <span className=\"todo__count\">{itemsInfo}</span>\r\n            <ul className=\"todo__filters\">\r\n                {sortButtons.map((button, key) => (\r\n                    <li \r\n                        key={`${button}${key}`}\r\n                        className={getClassName(button)}\r\n                        onClick={() => modeHandler(button.toLowerCase())}\r\n                    >\r\n                        {button}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport NewToDo from './components/NewToDo';\nimport ToDoList from './components/ToDoList';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  \n  state = {\n    tasks: [],\n    showMode: 'all'\n  }\n\n  componentDidMount() {\n    const tasks = JSON.parse(localStorage.getItem('tasks')),\n    showMode = localStorage.getItem('showMode');\n    \n    this.setState({ tasks, showMode });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.localStorageHandler();\n    }\n  }\n\n  addTask = task => {\n    const {tasks} = this.state;\n    tasks.push(task);\n    \n    this.setState({ tasks });\n  };\n\n  removeTask = taskId => {\n    const {tasks} = this.state,\n      newTasks = tasks.filter(task => task.id !== taskId);\n    \n    \n    this.setState({\n      tasks: newTasks\n    });\n  };\n\n  statusHandler = taskId => {\n    const {tasks} = this.state,\n      newTasks = tasks.map(task => {\n\n      if (taskId === task.id) {\n        (task.status === 'completed') ? task.status = 'active': task.status = 'completed';\n      }\n\n      return task;\n    });\n\n    this.setState({\n      tasks: newTasks\n    });\n  };\n\n  modeHandler = (showMode) => this.setState({ showMode });\n\n  localStorageHandler = () => {\n    const {tasks, showMode} = this.state;\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    localStorage.setItem('showMode', showMode);\n  };\n\n  render() {\n    const {tasks, showMode} = this.state,\n      items = tasks.filter(task => task.status.toLowerCase() === 'active').length;\n\n\n    return (\n      <section className=\"todo-app\">\n        <Header />\n        <section className=\"main\">\n          <NewToDo\n            addTask={this.addTask}\n            items={items}\n            tasksLength={tasks.length}\n          />\n          <ToDoList\n            tasks={tasks}\n            removeTask={this.removeTask}\n            statusHandler={this.statusHandler}\n            showMode={showMode}\n          />\n        </section>\n        {(!!items || !!tasks.length) && \n        <Footer \n          modeHandler={this.modeHandler}\n          showMode={showMode}\n          items={items}\n        />\n        }\n      </section>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}